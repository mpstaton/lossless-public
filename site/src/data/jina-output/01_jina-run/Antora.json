{
  "code": 200,
  "status": 20000,
  "data": {
    "links": {
      "Antora": "https://antora.org/",
      "Docs": "https://docs.antora.org/",
      "": "https://github.com/asciidoctor",
      "Install Antora": "https://docs.antora.org/antora/latest/install-and-run-quickstart/",
      "View the Source": "https://gitlab.com/antora/antora",
      "Code of Conduct": "https://gitlab.com/antora/antora/-/blob/HEAD/CODE-OF-CONDUCT.adoc",
      "Terms of Use": "https://antora.org/legal/terms-of-use/",
      "Privacy": "https://antora.org/legal/privacy-policy/",
      "Legal": "https://antora.org/legal/",
      "Antora Default UI": "https://gitlab.com/antora/antora-ui-default",
      "Asciidoctor": "https://asciidoctor.org/",
      "Asciidoctor.js": "https://github.com/asciidoctor/asciidoctor.js"
    },
    "title": "Antora",
    "description": "An Asciidoctor documentation toolchain that helps technical teams create, manage, collaborate on, remix, release, and publish documentation sites sourced from multiple versioned repositories.",
    "url": "https://antora.org/",
    "content": "Antora\n===============              \n\n[Antora](https://antora.org/)\n\n[Docs](https://docs.antora.org/)[](https://twitter.com/antoraproject)[](https://gitlab.com/antora)[](https://docs.antora.org/antora/latest/project/get-help/)\n\nAntora\n======\n\nThe single or multi-repository documentation site generator for tech writers who writing in AsciiDoc.\n\n### Antora 3.1 is now available!\n\n[Install Antora](https://docs.antora.org/antora/latest/install-and-run-quickstart/)[View the Source](https://gitlab.com/antora/antora)\n\n### Docs as Code\n\n### Store documentation in one or more repositories\n\nNo matter how many git repositories you use, Antora can retrieve and aggregate all the content from them to assemble a documentation site.\n\n### Workspaces that fit team and content requirements\n\nSince documentation files can be stored in separate repositories, the teams that maintain them can use the administration policies, version schema, and release schedule that works for them.\n\n![Image 1](https://antora.org/img/multi-repo.svg)\n\n![Image 2](https://antora.org/img/multi-branch.svg)\n\n### Manage versions like a pro\n\nUse branches to version documentation just like software. Antora can find repository branches and assemble the files in each branch into a versioned documentation collection. Antora also knows how to ignore branches you don’t want published.\n\n### Remote and local, private and public, bare and non-bare\n\nAntora can collect files from a combination of local, remote public, and remote private repositories over any protocol supported by git.\n\n### Site Orchestration for Everyone\n\n![Image 3](https://antora.org/img/antora-playbook.svg)\n\n### Antora’s playbook\n\nWith an Antora playbook, anyone can easily assemble and generate a documentation site. A playbook is a straight-forward set of concise instructions that tell Antora what documentation to assemble, where to find it, and what UI to apply to it.\n\n### Run your playbook using the Antora CLI\n\nJust point the Antora CLI at your playbook to configure and execute the default site generator. Out comes your site!\n\n### Site remixes for any occasion\n\nWith Antora’s playbooks, you can control which versions of the documentation get published to a site. You can even tell Antora to use uncommitted changes when generating the site on a local machine.\n\n### Open architecture\n\nAntora features an open architecture. Despite providing an opinionated default site generator, you’re free to reuse the core components to assemble your own custom generator pipeline.\n\n### Multi-channel publishing\n\nAntora automatically adapts a docs site to its publishing environment. Whether the site is published locally, to revolving testing, QA, or staging environments, or to an alternate URL for a campaign or event, the site is fully functional. This environment portability is possible because Antora’s cross referencing system isn’t based on a hardcoded base URL or system path.\n\n### Minimal Markup, Maximum Functionality\n\nMark up content with AsciiDoc’s lightweight yet comprehensive syntax.\n\n*   Bold, italic, monospace, highlight, and custom text roles\n*   Special characters, font icons, and UI references\n*   Ordered, unordered, definition, and interactive task lists\n*   YouTube, Vimeo, and self-hosted videos with display and user-control options\n*   Images and icons\n*   Tables, notices, quotes, and sidebars\n*   Metadata and taxonomy\n*   Cross references, page-to-page and in-page\n*   Include directives with tags\n*   Table of contents\n*   Source code with callouts, callout icons, wrap and scroll controls, and syntax highlighting\n*   Page, section, asset, block, and line controls to optimize reader experience\n\n### No markup plugins, extensions, or shortcodes needed\n\nAsciiDoc’s extensive feature set is available right out of the box with Antora. There’s no need to find, install, and manage plugins, extensions, or scripts to add basic capabilities to the syntax.\n\n### No flavor lock-in\n\nDocumentation written with AsciiDoc works with all of the software and tools in the Asciidoctor ecosystem. You don’t need to worry about incompatible syntax or lost functionality.\n\n### Tooling\n\nWrite and preview AsciiDoc with text editors and IDEs like Atom, Brackets, and IntelliJ. And GitLab and GitHub render AsciiDoc files right in the browser.\n\n### Extension API\n\nCustom syntax or output transformations can be added as discrete extensions using Asciidoctor’s extension API.\n\n### Responsive maintainers\n\nAntora’s core developers help lead the Asciidoctor organization, home of the AsciiDoc syntax and Asciidoctor, the AsciiDoc processor. Due to this direct relationship, Antora is always in sync with AsciiDoc and Asciidoctor features.\n\n### Cross References\n\n### Decoupled from filesystems, environments, and URLs\n\nIt doesn’t matter where you publish your documentation site — on a local machine, a staging environment, or a production environment — the page-to-page cross references always work. That’s because Antora’s page referencing system isn’t coupled to filesystem paths or URLs.\n\n### Site Navigation\n\n### Described using AsciiDoc lists\n\nA site’s navigation is described by one or more AsciiDoc lists that are stored alongside your documentation files. Links are added using the same cross referencing syntax used in the pages themselves.\n\n### No content or organization restrictions\n\nAdd normal text, images, icons, and external links to the navigation. Order and nest the links in the arrangement of your choice.\n\n### Site UI & Theme\n\n### Discrete UI\n\nSite UIs are stored in separate repositories so that developing, testing, and publishing new or updated themes has no impact on your documentation files or their repositories. Antora retrieves the specified site UI just like it fetches the content files from their repositories.\n\n### Web team workspaces\n\nWeb teams can use their preferred repository structure, development workflow and release schedule since the site UI isn’t stored with the documentation.\n\n### Hot swap UIs\n\nSwitch between site UIs just by changing the UI address in the playbook.\n\n### URLs & Routes\n\n### URLs for humans and SEO\n\nA page’s URL is derived from its filename, yet still isolated from its full filesystem path.\n\n### Route and redirect controls\n\nRoutes and redirects can be specified at the site, component, version, module, and page level.\n\n### Metadata & Taxonomy\n\n### Multi-level metadata controls\n\nAdd and remove metadata at the site, component, module, and page level using AsciiDoc attributes.\n\n### Built-in and custom taxonomy types\n\nAssign taxonomy types and values at the site or page level.\n\n### Antora\n\nA documentation pipeline that enables docs, product, and engineering teams to create, manage, remix, and publish documentation sites composed in AsciiDoc and sourced from one or more versioned content repositories.\n\n© 2024 OpenDevise Inc. and the individual contributors to Antora.\n\n[Code of Conduct](https://gitlab.com/antora/antora/-/blob/HEAD/CODE-OF-CONDUCT.adoc) - [Terms of Use](https://antora.org/legal/terms-of-use/) - [Privacy](https://antora.org/legal/privacy-policy/) - [Legal](https://antora.org/legal/)\n\n#### Antora OSS\n\n[Antora](https://gitlab.com/antora/antora)\n\n[](https://gitlab.com/antora/antora)\n\nA modular, single or multi-repository documentation site generator designed for DevOps-savvy documentation teams who are looking to get the most from their AsciiDoc content.\n\n[Antora Default UI](https://gitlab.com/antora/antora-ui-default)\n\n[](https://gitlab.com/antora/antora-ui-default)\n\nAn archetype UI for documentation sites assembled and published by Antora.\n\n#### Asciidoctor OSS\n\n[Asciidoctor](https://asciidoctor.org/)\n\n[](https://github.com/asciidoctor)\n\nA fast text processor and publishing toolchain for converting AsciiDoc content to HTML5, DocBook, PDF, and other formats.\n\n[Asciidoctor.js](https://github.com/asciidoctor/asciidoctor.js)\n\n[](https://github.com/asciidoctor/asciidoctor.js)\n\nAsciidoctor.js brings AsciiDoc to the JavaScript world.",
    "usage": {
      "tokens": 1745
    }
  }
}