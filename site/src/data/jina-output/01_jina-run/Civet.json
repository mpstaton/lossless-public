{
  "code": 200,
  "status": 20000,
  "data": {
    "links": {
      "Skip to content": "https://civet.dev/#VPContent",
      "Civet": "https://civet.dev/",
      "Getting started": "https://civet.dev/getting-started",
      "Reference": "https://civet.dev/reference",
      "Cheatsheet": "https://civet.dev/cheatsheet",
      "Comparison": "https://civet.dev/comparison",
      "Integrations": "https://civet.dev/integrations",
      "Config": "https://civet.dev/config",
      "Playground": "https://civet.dev/playground",
      "": "https://www.builder.io/",
      "TypeScript": "https://www.typescriptlang.org/",
      "JavaScript": "https://developer.mozilla.org/en-US/docs/Web/JavaScript",
      "design philosophy": "https://civet.dev/philosophy",
      "changelog": "https://github.com/DanielXMoore/Civet/blob/main/CHANGELOG.md",
      "​": "https://civet.dev/#contributors",
      "TC39 Proposal: Pattern Matching": "https://github.com/tc39/proposal-pattern-matching",
      "edit in the Playground": "https://civet.dev/playground?code=ZnVuY3Rpb24gTGlzdGluZyhwcm9wcykKICA8aDEgI2hlYWRpbmc+SGVsbG8gQ2l2ZXQhCiAgPHVsIC5pdGVtcz4KICAgIDxGb3IgZWFjaD1wcm9wcy5pdGVtcz4KICAgICAgKGl0ZW0pID0+CiAgICAgICAgPGxpIC5pdGVtIHtwcm9wcy5zdHlsZX0+PEl0ZW0ge2l0ZW19Pg==",
      "TC39 Proposal: Pipe Operator": "https://github.com/tc39/proposal-pipeline-operator",
      "TC39 proposal: do expressions": "https://github.com/tc39/proposal-do-expressions",
      "TC39 Proposal: String Dedent": "https://github.com/tc39/proposal-string-dedent",
      "JSX": "https://civet.dev/reference#jsx",
      "Support the future development of Civet!": "https://opencollective.com/civet",
      "edemaine (2028)": "https://github.com/edemaine",
      "STRd6 (1465)": "https://github.com/STRd6",
      "Mokshit06 (48)": "https://github.com/Mokshit06",
      "bbrk24 (48)": "https://github.com/bbrk24",
      "Argeento (21)": "https://github.com/Argeento",
      "lorefnon (12)": "https://github.com/lorefnon",
      "peey (10)": "https://github.com/peey",
      "NWYLZW (8)": "https://github.com/NWYLZW",
      "vendethiel (7)": "https://github.com/vendethiel",
      "IamIpanda (4)": "https://github.com/IamIpanda",
      "zoodogood (4)": "https://github.com/zoodogood",
      "krist7599555 (4)": "https://github.com/krist7599555",
      "p2edwards (3)": "https://github.com/p2edwards",
      "zolomatok (3)": "https://github.com/zolomatok",
      "danielbayley (2)": "https://github.com/danielbayley",
      "Milo123459 (2)": "https://github.com/Milo123459",
      "aleksrutins (1)": "https://github.com/aleksrutins",
      "iliocatallo (1)": "https://github.com/iliocatallo",
      "Irian3x3 (1)": "https://github.com/Irian3x3",
      "samualtnorman (1)": "https://github.com/samualtnorman",
      "shaunchander (1)": "https://github.com/shaunchander",
      "tomByrer (1)": "https://github.com/tomByrer",
      "esthedebeste (1)": "https://github.com/esthedebeste",
      "Edit this page on GitHub": "https://github.com/DanielXMoore/Civet/edit/main/civet.dev/index.md"
    },
    "title": "Civet - The Modern Way to Write TypeScript",
    "description": "Code More with Less in a TypeScript Superset",
    "url": "https://civet.dev/",
    "content": "Homepage | Civet\n=============== \n\n[Skip to content](https://civet.dev/#VPContent)\n\n[![Image 1](https://user-images.githubusercontent.com/13007891/210392977-03a3b140-ec63-4ce9-b6e3-0a0f7cac6cbe.png)Civet](https://civet.dev/)\n\nMain Navigation[Getting started](https://civet.dev/getting-started)[Reference](https://civet.dev/reference)[Cheatsheet](https://civet.dev/cheatsheet)[Comparison](https://civet.dev/comparison)[Integrations](https://civet.dev/integrations)[Config](https://civet.dev/config)[Playground](https://civet.dev/playground)\n\n[](https://discord.gg/xkrW9GebBc)[](https://twitter.com/hashtag/civetlang?src=hashtag_click)[](https://github.com/DanielXMoore/Civet)\n\nAppearance\n\n[](https://discord.gg/xkrW9GebBc)[](https://twitter.com/hashtag/civetlang?src=hashtag_click)[](https://github.com/DanielXMoore/Civet)\n\nOn this page\n\nOn this page\n\nCivet\n=====\n\nA Programming Language for the New Millennium\n\nCode More with Less in a TypeScript Superset\n\n[Reference](https://civet.dev/reference)\n\n[Cheatsheet](https://civet.dev/cheatsheet)\n\n[Civet playground](https://civet.dev/playground)\n\n![Image 2: Civet logo](https://user-images.githubusercontent.com/13007891/210392977-03a3b140-ec63-4ce9-b6e3-0a0f7cac6cbe.png)\n\n_**Civet**_ is a programming language that compiles to [TypeScript](https://www.typescriptlang.org/) or [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript), so you can [use existing tooling](https://civet.dev/integrations) (including VSCode type checking, hints, completion, etc.) while enabling concise and powerful syntax. It starts with [99% JS/TS compatibility](https://civet.dev/comparison), making it easy to transition existing code bases. Then it adds many features and syntactic sugar, with some highlights below and more comprehensive examples in the [reference](https://civet.dev/reference). See also Civet's [design philosophy](https://civet.dev/philosophy) and [changelog](https://github.com/DanielXMoore/Civet/blob/main/CHANGELOG.md).\n\nHighlights: Beyond TC39 [​](https://civet.dev/#highlights-beyond-tc39)\n----------------------------------------------------------------------\n\nCivet code on the lefttop, compiled TypeScript output on the rightbottom.\n\n### Pattern Matching [​](https://civet.dev/#pattern-matching)\n\n[TC39 Proposal: Pattern Matching](https://github.com/tc39/proposal-pattern-matching)\n\n```\nswitch x\n  0\n    console.log(\"zero\")\n  /^\\s+$/\n    console.log(\"whitespace\")\n  [{type: \"text\", content}, ...rest]\n    console.log(\"leading text\", content)\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=c3dpdGNoIHgKICAwCiAgICBjb25zb2xlLmxvZygiemVybyIpCiAgL15ccyskLwogICAgY29uc29sZS5sb2coIndoaXRlc3BhY2UiKQogIFt7dHlwZTogInRleHQiLCBjb250ZW50fSwgLi4ucmVzdF0KICAgIGNvbnNvbGUubG9nKCJsZWFkaW5nIHRleHQiLCBjb250ZW50KQ==)!\n\n```\nif (x === 0) {\n  console.log(\"zero\");\n} else if (\n  typeof x === \"string\" &&\n  /^\\s+$/.test(x)\n) {\n  console.log(\"whitespace\");\n} else if (\n  Array.isArray(x) &&\n  x.length >= 1 &&\n  typeof x[0] === \"object\" &&\n  x[0] != null &&\n  \"type\" in x[0] &&\n  x[0].type === \"text\" &&\n  \"content\" in x[0]\n) {\n  const [{ content }, ...rest] = x;\n  console.log(\"leading text\", content);\n}\n```\n\n Ligatures\n\n### Pipelines [​](https://civet.dev/#pipelines)\n\n[TC39 Proposal: Pipe Operator](https://github.com/tc39/proposal-pipeline-operator)\n\n```\ndata\n  |> Object.keys\n  |> console.log\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=ZGF0YQogIHw+IE9iamVjdC5rZXlzCiAgfD4gY29uc29sZS5sb2c=)!\n\n```\nconsole.log(Object.keys(data));\n```\n\n Ligatures\n\nFat pipes manipulate the same object repeatedly:\n\n```\ndocument.createElement('div')\n||> .className = 'civet'\n||> .appendChild document.createTextNode 'Civet'\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykKfHw+IC5jbGFzc05hbWUgPSAnY2l2ZXQnCnx8PiAuYXBwZW5kQ2hpbGQgZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUgJ0NpdmV0Jw==)!\n\n```\nlet ref;\n(ref = document.createElement(\"div\")).className =\n  \"civet\";\nref.appendChild(document.createTextNode(\"Civet\"));\nref;\n```\n\n Ligatures\n\nPipe expression with shorthand functions:\n\n```\na |> & + 1 |> bar\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=YSB8PiAmICsgMSB8PiBiYXI=)!\n\n```\nbar(a + 1);\n```\n\n Ligatures\n\n### Single-Argument Function Shorthand [​](https://civet.dev/#single-argument-function-shorthand)\n\n```\nx.map .name\nx.map &.profile?.name[0...3]\nx.map &.callback a, b\nx.map &+1\nx.map -&\nx.map [&, &.toUpperCase()]\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=eC5tYXAgLm5hbWUKeC5tYXAgJi5wcm9maWxlPy5uYW1lWzAuLi4zXQp4Lm1hcCAmLmNhbGxiYWNrIGEsIGIKeC5tYXAgJisxCngubWFwIC0mCngubWFwIFsmLCAmLnRvVXBwZXJDYXNlKCld)!\n\n```\nx.map(($) => $.name);\nx.map(($1) => $1.profile?.name.slice(0, 3));\nx.map(($2) => $2.callback(a, b));\nx.map(($3) => $3 + 1);\nx.map(($4) => -$4);\nx.map(($5) => [$5, $5.toUpperCase()]);\n```\n\n Ligatures\n\n### Custom Infix Operators [​](https://civet.dev/#custom-infix-operators)\n\n```\noperator {min, max} := Math\nvalue min ceiling max floor\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=b3BlcmF0b3Ige21pbiwgbWF4fSA6PSBNYXRoCnZhbHVlIG1pbiBjZWlsaW5nIG1heCBmbG9vcg==)!\n\n```\nconst { min, max } = Math;\nmax(min(value, ceiling), floor);\n```\n\n Ligatures\n\n### Declarations in Conditions and Loops [​](https://civet.dev/#declarations-in-conditions-and-loops)\n\n```\nif match := regex.exec string\n  console.log match\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=aWYgbWF0Y2ggOj0gcmVnZXguZXhlYyBzdHJpbmcKICBjb25zb2xlLmxvZyBtYXRjaA==)!\n\n```\nlet ref;\nif ((ref = regex.exec(string))) {\n  const match = ref;\n  console.log(match);\n}\n```\n\n Ligatures\n\n### Everything is an Expression [​](https://civet.dev/#everything-is-an-expression)\n\n```\nitems = for item of items\n  if item.length\n    item.toUpperCase()\n  else\n    \"<empty>\"\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=aXRlbXMgPSBmb3IgaXRlbSBvZiBpdGVtcwogIGlmIGl0ZW0ubGVuZ3RoCiAgICBpdGVtLnRvVXBwZXJDYXNlKCkKICBlbHNlCiAgICAiPGVtcHR5PiI=)!\n\n```\nconst results = [];\nfor (const item of items) {\n  if (item.length) {\n    results.push(item.toUpperCase());\n  } else {\n    results.push(\"<empty>\");\n  }\n}\nitems = results;\n```\n\n Ligatures\n\n```\nreturn\n  if x == null\n    throw \"x is null\"\n  else\n    log `received x of ${x}`\n    x.value()\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=cmV0dXJuCiAgaWYgeCA9PSBudWxsCiAgICB0aHJvdyAieCBpcyBudWxsIgogIGVsc2UKICAgIGxvZyBgcmVjZWl2ZWQgeCBvZiAke3h9YAogICAgeC52YWx1ZSgp)!\n\n```\nreturn (() => {\n  if (x == null) {\n    throw \"x is null\";\n  } else {\n    log(`received x of ${x}`);\n    return x.value();\n  }\n})();\n```\n\n Ligatures\n\n```\nconst fs = import {readFile, writeFile} from \"fs\"\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=Y29uc3QgZnMgPSBpbXBvcnQge3JlYWRGaWxlLCB3cml0ZUZpbGV9IGZyb20gImZzIg==)!\n\n```\nlet ref;\nconst fs = {\n  readFile: (ref = await import(\"fs\")).readFile,\n  writeFile: ref.writeFile,\n};\n```\n\n Ligatures\n\n[TC39 proposal: `do` expressions](https://github.com/tc39/proposal-do-expressions)\n\n```\nx = do\n  const tmp = f()\n  tmp * tmp + 1\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=eCA9IGRvCiAgY29uc3QgdG1wID0gZigpCiAgdG1wICogdG1wICsgMQ==)!\n\n```\nlet ref;\n{\n  const tmp = f();\n  ref = tmp * tmp + 1;\n}\nx = ref;\n```\n\n Ligatures\n\n### Bulleted Lists and Unbraced Object Literals [​](https://civet.dev/#bulleted-lists-and-unbraced-object-literals)\n\n```\nprojects:\n  . name: \"Civet\"\n    url: \"https://civet.dev\"\n  . name: \"TypeScript\"\n    url: \"https://www.typescriptlang.org\"\ncolorPairs:\n  . . \"red\"\n    . \"#f00\"\n  . . \"green\"\n    . \"#0f0\"\n  . . \"blue\"\n    . \"#00f\"\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=cHJvamVjdHM6CiAgLiBuYW1lOiAiQ2l2ZXQiCiAgICB1cmw6ICJodHRwczovL2NpdmV0LmRldiIKICAuIG5hbWU6ICJUeXBlU2NyaXB0IgogICAgdXJsOiAiaHR0cHM6Ly93d3cudHlwZXNjcmlwdGxhbmcub3JnIgpjb2xvclBhaXJzOgogIC4gLiAicmVkIgogICAgLiAiI2YwMCIKICAuIC4gImdyZWVuIgogICAgLiAiIzBmMCIKICAuIC4gImJsdWUiCiAgICAuICIjMDBmIg==)!\n\n```\n({\n  projects: [\n    { name: \"Civet\", url: \"https://civet.dev\" },\n    {\n      name: \"TypeScript\",\n      url: \"https://www.typescriptlang.org\",\n    },\n  ],\n  colorPairs: [\n    [\"red\", \"#f00\"],\n    [\"green\", \"#0f0\"],\n    [\"blue\", \"#00f\"],\n  ],\n});\n```\n\n Ligatures\n\n### Dedented Strings and Templates [​](https://civet.dev/#dedented-strings-and-templates)\n\n[TC39 Proposal: String Dedent](https://github.com/tc39/proposal-string-dedent)\n\n```\ntext = \"\"\"\n  This text is a string that doesn't include\n  the leading whitespace.\n\"\"\"\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=dGV4dCA9ICIiIgogIFRoaXMgdGV4dCBpcyBhIHN0cmluZyB0aGF0IGRvZXNuJ3QgaW5jbHVkZQogIHRoZSBsZWFkaW5nIHdoaXRlc3BhY2UuCiIiIg==)!\n\n```\ntext = `This text is a string that doesn't include\nthe leading whitespace.`;\n```\n\n Ligatures\n\n````\ntext = ```\n  Also works for\n  ${templates}!\n```\n````\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=dGV4dCA9IGBgYAogIEFsc28gd29ya3MgZm9yCiAgJHt0ZW1wbGF0ZXN9IQpgYGA=)!\n\n```\ntext = `Also works for\n${templates}!`;\n```\n\n Ligatures\n\n### Chained Comparisons [​](https://civet.dev/#chained-comparisons)\n\n```\na < b <= c\nvalue > min?\na is b is not c\na instanceof b not instanceof c\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=YSA8IGIgPD0gYwp2YWx1ZSA+IG1pbj8KYSBpcyBiIGlzIG5vdCBjCmEgaW5zdGFuY2VvZiBiIG5vdCBpbnN0YW5jZW9mIGM=)!\n\n```\na < b && b <= c;\nmin != null && value > min;\na === b && b !== c;\na instanceof b && !(b instanceof c);\n```\n\n Ligatures\n\n### Default to `const` for Iteration Items [​](https://civet.dev/#default-to-const-for-iteration-items)\n\n```\nfor (item of [1, 2, 3, 4, 5]) {\n  console.log(item * item);\n}\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=Zm9yIChpdGVtIG9mIFsxLCAyLCAzLCA0LCA1XSkgewogIGNvbnNvbGUubG9nKGl0ZW0gKiBpdGVtKTsKfQ==)!\n\n```\nfor (const item of [1, 2, 3, 4, 5]) {\n  console.log(item * item);\n}\n```\n\n Ligatures\n\n### Spread in Any Position [​](https://civet.dev/#spread-in-any-position)\n\nSpreads in first or middle position:\n\n```\n[...head, last] = [1, 2, 3, 4, 5]\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=Wy4uLmhlYWQsIGxhc3RdID0gWzEsIDIsIDMsIDQsIDVd)!\n\n```\n([...head] = [1, 2, 3, 4, 5]),\n  ([last] = head.splice(-1));\n```\n\n Ligatures\n\n```\n{a, ...rest, b} = {a: 7, b: 8, x: 0, y: 1}\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=e2EsIC4uLnJlc3QsIGJ9ID0ge2E6IDcsIGI6IDgsIHg6IDAsIHk6IDF9)!\n\n```\n({ a, b, ...rest } = { a: 7, b: 8, x: 0, y: 1 });\n```\n\n Ligatures\n\n```\nfunction justDoIt(a, ...args, cb) {\n  cb.apply(a, args)\n}\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=ZnVuY3Rpb24ganVzdERvSXQoYSwgLi4uYXJncywgY2IpIHsKICBjYi5hcHBseShhLCBhcmdzKQp9)!\n\n```\nfunction justDoIt(a, ...args) {\n  let [cb] = args.splice(-1);\n  return cb.apply(a, args);\n}\n```\n\n Ligatures\n\n### Import Syntax Matches Destructuring [​](https://civet.dev/#import-syntax-matches-destructuring)\n\n```\nimport {X: LocalX, Y: LocalY} from \"./util\"\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=aW1wb3J0IHtYOiBMb2NhbFgsIFk6IExvY2FsWX0gZnJvbSAiLi91dGlsIg==)!\n\n```\nimport { X as LocalX, Y as LocalY } from \"./util\";\n```\n\n Ligatures\n\n### Export Convenience [​](https://civet.dev/#export-convenience)\n\n```\nexport a, b, c from \"./cool.js\"\nexport x = 3\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=ZXhwb3J0IGEsIGIsIGMgZnJvbSAiLi9jb29sLmpzIgpleHBvcnQgeCA9IDM=)!\n\n```\nexport { a, b, c } from \"./cool.js\";\nexport var x = 3;\n```\n\n Ligatures\n\n### [JSX](https://civet.dev/reference#jsx) [​](https://civet.dev/#jsx)\n\n```\nfunction Listing(props)\n  <h1 #heading>Hello Civet!\n  <ul .items>\n    <For each=props.items>\n      (item) =>\n        <li .item {props.style}><Item {item}>\n```\n\nEdit inline or [edit in the Playground](https://civet.dev/playground?code=ZnVuY3Rpb24gTGlzdGluZyhwcm9wcykKICA8aDEgI2hlYWRpbmc+SGVsbG8gQ2l2ZXQhCiAgPHVsIC5pdGVtcz4KICAgIDxGb3IgZWFjaD1wcm9wcy5pdGVtcz4KICAgICAgKGl0ZW0pID0+CiAgICAgICAgPGxpIC5pdGVtIHtwcm9wcy5zdHlsZX0+PEl0ZW0ge2l0ZW19Pg==)!\n\n```\nfunction Listing(props) {\n  return (\n    <>\n      <h1 id=\"heading\">Hello Civet!</h1>\n      <ul class=\"items\">\n        <For each={props.items}>\n          {(item) => {\n            return (\n              <li\n                class=\"item\"\n                style={props.style}\n              >\n                <Item item={item} />\n              </li>\n            );\n          }}\n        </For>\n      </ul>\n    </>\n  );\n}\n```\n\n Ligatures\n\nSponsors\n--------\n\nThank you to all of our sponsors for your invaluable support and contribution to the Civet language!\n\n*   [![Image 3: Builder.io](https://opencollective-production.s3.us-west-1.amazonaws.com/f93bac30-9335-11ec-8379-5f37557b9c6c.png)](https://www.builder.io/)\n\n[Support the future development of Civet!](https://opencollective.com/civet)\n\nContributors [​](https://civet.dev/#contributors)\n-------------------------------------------------\n\nThank you for your work and dedication to the Civet project!\n\n*   [![Image 4: edemaine](https://avatars.githubusercontent.com/u/2218736?v=4)edemaine (2028)](https://github.com/edemaine)\n*   [![Image 5: STRd6](https://avatars.githubusercontent.com/u/18894?v=4)STRd6 (1465)](https://github.com/STRd6)\n*   [![Image 6: Mokshit06](https://avatars.githubusercontent.com/u/50412128?v=4)Mokshit06 (48)](https://github.com/Mokshit06)\n*   [![Image 7: bbrk24](https://avatars.githubusercontent.com/u/25109429?v=4)bbrk24 (48)](https://github.com/bbrk24)\n*   [![Image 8: Argeento](https://avatars.githubusercontent.com/u/13007891?v=4)Argeento (21)](https://github.com/Argeento)\n*   [![Image 9: lorefnon](https://avatars.githubusercontent.com/u/1449492?v=4)lorefnon (12)](https://github.com/lorefnon)\n*   [![Image 10: peey](https://avatars.githubusercontent.com/u/4688870?v=4)peey (10)](https://github.com/peey)\n*   [![Image 11: NWYLZW](https://avatars.githubusercontent.com/u/51358815?v=4)NWYLZW (8)](https://github.com/NWYLZW)\n*   [![Image 12: vendethiel](https://avatars.githubusercontent.com/u/199499?v=4)vendethiel (7)](https://github.com/vendethiel)\n*   [![Image 13: IamIpanda](https://avatars.githubusercontent.com/u/1856613?v=4)IamIpanda (4)](https://github.com/IamIpanda)\n*   [![Image 14: zoodogood](https://avatars.githubusercontent.com/u/52154209?v=4)zoodogood (4)](https://github.com/zoodogood)\n*   [![Image 15: krist7599555](https://avatars.githubusercontent.com/u/19445033?v=4)krist7599555 (4)](https://github.com/krist7599555)\n*   [![Image 16: p2edwards](https://avatars.githubusercontent.com/u/3514715?v=4)p2edwards (3)](https://github.com/p2edwards)\n*   [![Image 17: zolomatok](https://avatars.githubusercontent.com/u/11703903?v=4)zolomatok (3)](https://github.com/zolomatok)\n*   [![Image 18: danielbayley](https://avatars.githubusercontent.com/u/7797479?v=4)danielbayley (2)](https://github.com/danielbayley)\n*   [![Image 19: Milo123459](https://avatars.githubusercontent.com/u/50248166?v=4)Milo123459 (2)](https://github.com/Milo123459)\n*   [![Image 20: aleksrutins](https://avatars.githubusercontent.com/u/24496030?v=4)aleksrutins (1)](https://github.com/aleksrutins)\n*   [![Image 21: iliocatallo](https://avatars.githubusercontent.com/u/3093067?v=4)iliocatallo (1)](https://github.com/iliocatallo)\n*   [![Image 22: Irian3x3](https://avatars.githubusercontent.com/u/68793401?v=4)Irian3x3 (1)](https://github.com/Irian3x3)\n*   [![Image 23: samualtnorman](https://avatars.githubusercontent.com/u/18307063?v=4)samualtnorman (1)](https://github.com/samualtnorman)\n*   [![Image 24: shaunchander](https://avatars.githubusercontent.com/u/5169985?v=4)shaunchander (1)](https://github.com/shaunchander)\n*   [![Image 25: tomByrer](https://avatars.githubusercontent.com/u/1308419?v=4)tomByrer (1)](https://github.com/tomByrer)\n*   [![Image 26: esthedebeste](https://avatars.githubusercontent.com/u/57283066?v=4)esthedebeste (1)](https://github.com/esthedebeste)\n\n[Edit this page on GitHub](https://github.com/DanielXMoore/Civet/edit/main/civet.dev/index.md)\n\nLast updated: 2/26/25, 3:27 PM",
    "usage": {
      "tokens": 5774
    }
  }
}