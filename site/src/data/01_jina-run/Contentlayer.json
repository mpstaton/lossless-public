{
  "code": 200,
  "status": 20000,
  "data": {
    "links": {
      "Contentlayer": "https://contentlayer.dev/",
      "Documentation": "https://contentlayer.dev/docs",
      "Examples": "https://contentlayer.dev/examples/nextjs",
      "Github": "https://github.com/contentlayerdev/contentlayer",
      "Discord": "https://discord.gg/rytFErsARm",
      "Get started": "https://contentlayer.dev/docs/getting-started",
      "Why Contentlayer?": "https://contentlayer.dev/blog/working-with-content-is-hard-for-developers",
      "": "https://contentlayer.dev/docs/sources/sanity",
      "Used in 20933 projectsExplore on GitHub": "https://github.com/contentlayerdev/contentlayer/network/dependents",
      "Explore Example": "https://github.com/contentlayerdev/next-contentlayer-example",
      "Read more in docs": "https://contentlayer.dev/docs/other/faq",
      "Ask a question": "https://github.com/contentlayerdev/contentlayer/issues/new",
      "Learn more": "https://contentlayer.dev/docs/other/faq#can-i-use-contentlayer-with-my-existing-tools",
      "Lee RobinsonDeveloper Relations at VercelHaving type-safe access to my content has been extremely helpful. Contentlayer provides a nice abstraction between your Markdown files or CMS and your application.": "https://twitter.com/leeerob",
      "Pedro DuarteCreator of Radix UIBeen using Contentlayer as the mdx processor for the Rainbow docs. Such a pleasant experience üßò‚Äç‚ôÇÔ∏è It transforms the mdx files, validates them AND adds types!": "https://twitter.com/peduarte/status/1514688181278580738",
      "Houssein DjirdehSoftware Engineer at GoogleContentlayer looks like a super promising library [...] to import data from CMS platforms or local files like markdown into your application. Took me less than 5 minutes to cleanly separate and connect MDX files to a Next.js layout.": "https://twitter.com/hdjirdeh/status/1483047963316260870",
      "Jed WatsonCo-founder of ThinkmillIf you bring content-as-data into your website, whether it's from Markdown files or a hosted CMS, do yourself a favour and check this out. Massive leap forward in speed, type safety, and DX üëèüèª": "https://twitter.com/JedWatson/status/1517130123463454721",
      "Jo√£o Pedro SchmitzFront-End Engineer at GraphCMSWe're using Contentlayer on the @GraphCMS documentation, and it's fantastic! It not only loads all the local content, but it also supports MDX. Plus, having type definitions for the content is super helpful.": "https://twitter.com/jpedroschmitz/status/1514655711535546375",
      "Stackbit": "https://www.stackbit.com/",
      "@schickling": "https://twitter.com/schickling",
      "Concepts": "https://contentlayer.dev/docs/concepts",
      "Sources": "https://contentlayer.dev/docs/sources",
      "Environments": "https://contentlayer.dev/docs/environments",
      "API Reference": "https://contentlayer.dev/docs/reference",
      "Twitter": "https://twitter.com/contentlayerdev"
    },
    "title": "Contentlayer makes content easy for developers",
    "description": "Contentlayer is a content SDK that validates and transforms your content into type-safe JSON data you can easily import into your application.",
    "url": "https://www.contentlayer.dev/",
    "content": "Contentlayer makes content easy for developers\n=============== \n\n[Contentlayer](https://www.contentlayer.dev/)Beta\n\n[Documentation](https://www.contentlayer.dev/docs)[Examples](https://www.contentlayer.dev/examples/nextjs)\n\nSearch...‚åòK\n\n[Github](https://github.com/contentlayerdev/contentlayer)[Discord](https://discord.gg/rytFErsARm)\n\nContent made easy for developers\n================================\n\nContentlayer is a content SDK that validates and transforms your content into type-safe JSON data you can easily import into your application.\n\n*   Lightweight & easy to use\n*   Great developer experience\n*   Blazing fast build & page performance\n\n[Get started](https://www.contentlayer.dev/docs/getting-started)[Why Contentlayer?](https://www.contentlayer.dev/blog/working-with-content-is-hard-for-developers)\n\n![Image 1](blob:https://www.contentlayer.dev/6fc37aac2edce440236536572ebafff0)![Image 2: Intro to Contentlayer Video Thumbnail](https://www.contentlayer.dev/_next/image?url=%2Fimages%2Fcontentlayer-in-five-minutes.png&w=1920&q=75)\n\nSupported Frameworks\n--------------------\n\n[![Image 4](blob:https://www.contentlayer.dev/b4e3332498c2c38582fd1a6cf4453602)![Image 5: Next.js](https://www.contentlayer.dev/images/logos/nextjs.svg)](https://www.contentlayer.dev/docs/environments/nextjs)[![Image 7](blob:https://www.contentlayer.dev/d77baf3caa24ab9607270e91566baeb6)![Image 8: Remix](https://www.contentlayer.dev/images/logos/remix.svg)](https://www.contentlayer.dev/docs/environments/remix)[![Image 10](blob:https://www.contentlayer.dev/2fff0d8602c0955c564e8750034caf4f)![Image 11: Vite](https://www.contentlayer.dev/images/logos/vite.svg)](https://www.contentlayer.dev/docs/environments/vite)[![Image 13](blob:https://www.contentlayer.dev/09a2284f1ee62fd6d93b4c11b05ad3ee)![Image 14: Astro](https://www.contentlayer.dev/images/logos/astro.svg)](https://www.contentlayer.dev/docs/environments/astro)\n\nSupported Content Sources\n-------------------------\n\n[![Image 16](blob:https://www.contentlayer.dev/6201ae4200470835dc439257eee5a94d)![Image 17: MDX](https://www.contentlayer.dev/images/logos/mdx.svg)](https://www.contentlayer.dev/docs/sources/files)[![Image 19](blob:https://www.contentlayer.dev/f62d1f04a9509082c5d0e152adc018ab)![Image 20: Notion](https://www.contentlayer.dev/images/logos/notion.svg)](https://www.contentlayer.dev/docs/sources/notion)[![Image 22](blob:https://www.contentlayer.dev/ffdc91c77a340fb2845ace65126c1ac8)![Image 23: Contentful](https://www.contentlayer.dev/images/logos/contentful.svg)](https://www.contentlayer.dev/docs/sources/contentful)[![Image 25](blob:https://www.contentlayer.dev/c6fc62be977b7395d3d10ed82d08099c)![Image 26: Sanity](https://www.contentlayer.dev/images/logos/sanity.svg)](https://www.contentlayer.dev/docs/sources/sanity)\n\nHaving type-safe access to my content has been extremely helpful. Contentlayer provides a nice abstraction between your Markdown files or CMS and your application.\n\n![Image 28: Lee Robinson](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Fpbs.twimg.com%2Fprofile_images%2F1587647097670467584%2FadWRdqQ6_400x400.jpg&w=3840&q=75)\n\nLee Robinson\n\nDeveloper Relations at Vercel\n\n[![Image 30: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F1552357%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 32: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F75498339%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 34: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F16396161%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 36: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F7504237%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 38: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F34954499%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 40: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F65501165%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 42: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F10709345%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 44: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F49778014%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 46: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F47774076%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 48: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F77748010%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 50: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F51397083%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 52: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F5955802%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 54: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F84158781%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 56: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F12715704%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 58: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F76196237%3Fs%3D120%26v%3D4&w=3840&q=75) ![Image 60: Profile image](https://www.contentlayer.dev/_next/image?url=https%3A%2F%2Favatars.githubusercontent.com%2Fu%2F441774%3Fs%3D120%26v%3D4&w=3840&q=75) Used in 20933 projects Explore on GitHub](https://github.com/contentlayerdev/contentlayer/network/dependents)\n\n### Just use JS/TS\n\nNo need to learn a new query language or complicated API docs to read. Import and manipulate your content as data directly with the JavaScript methods you know and love.\n\n*   Simply `import` your content as data\n*   No new query language to learn\n*   Works great with your site framework\n\n### Built-in code confidence\n\nAutomatically-generated type definitions and configurable data validations ensure that your data is properly structured across your application.\n\n*   Validates your content & frontmatter\n*   Generates TypeScript types\n*   Great error messages\n\n### Build. Faster.\n\nContentlayer + Next.js brings faster build times than Next.js alone or up against other frameworks, like Gatsby.\n\n*   Incremental & parallel builds\n*   Instant content live-reload\n*   Scales to 100k of documents\n\nHow Contentlayer works with...\n------------------------------\n\nLocal filesNotion\n\n1\n\n### Configure your content source\n\nWhen working with local markdown or MDX files, you tell Contentlayer the expected shape of your data (document type definitions).\n\n[Explore Example](https://github.com/contentlayerdev/next-contentlayer-example)\n\ncontentlayer.config.ts\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\ntsx\n\n```\n\n\nimport { defineDocumentType, makeSource } from'contentlayer/source-files'\n\nconstPost=defineDocumentType(() => ({\n\n  name: 'Post',\n\n  filePathPattern: `**/*.md`,\n\n  fields: {\n\n    title: { type: 'string', required: true },\n\n    date: { type: 'date', required: true }\n\n  },\n\n  computedFields: {\n\n    url: { type: 'string', resolve: (post) =>`/posts/${post._raw.flattenedPath}` },\n\n  },\n\n}))\n\nexportdefaultmakeSource({\n\ncontentDirPath: 'posts',\n\n/*              ^^^^^^^ Directory with the Markdown files. */\n\ndocumentTypes: [Post]\n\n})\n\n```\n\n2\n\n### Your content is transformed into data\n\nRun Contentlayer to process your content. Do this as part of the Next.js dev server, or using the Contentlayer CLI.\n\nThis validates the content, then generates types definitions and outputs data objects ready to be imported as a ESM module.\n\nposts/\n\n*   ‚îú‚îÄ‚îÄ change-me.md\n    \n*   ‚îú‚îÄ‚îÄ click-me.md\n    \n*   ‚îî‚îÄ‚îÄ what-is-contentlayer.md\n    \n\n.contentlayer/generated/\n\n*   ‚îú‚îÄ‚îÄ Post/\n    \n    *   ‚îÇ ‚îú‚îÄ‚îÄ change-me.md.json\n        \n    *   ‚îÇ ‚îú‚îÄ‚îÄ click-me.md.json\n        \n    *   ‚îÇ ‚îî‚îÄ‚îÄ what-is-contentlayer.md.json\n        \n    \n*   ‚îú‚îÄ‚îÄ index.d.ts\n    \n*   ‚îî‚îÄ‚îÄ index.mjs\n    \n\n3\n\n### Import data into your application\n\nImport the data just like you would any other JavaScript library. Use it to render pages, and pass down as props to the components on those pages.\n\nKeep the development bundle small with tree-shaking and improve the development experience by using the generated type definitions.\n\napp/posts/page.tsxapp/posts/\\[slug\\]/page.tsx\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\ntsx\n\n```\n\n\nimport { allPosts } from'contentlayer/generated'\n\nexportdefaultfunctionHome() {\n\nreturn (\n\n    <div>\n\n      <h1>All posts</h1>\n\n      <ul>\n\n        {allPosts.map((post) => (\n\n          <likey={post.url}>\n\n            <ahref={post.url}>{post.title}</a>\n\n          </li>\n\n        ))}\n\n      </ul>\n\n    </div>\n\n  )\n\n}\n\n```\n\nGive Contentlayer a try ‚Äì right here\n------------------------------------\n\n1\\. Let's edit some content2\\. How content is transformed into data3\\. How data is used from your app4\\. Project setup\n\nTry to edit some of the content below...\n\n... the changes will update in real-time\n\n### Contentlayer Playground\n\nContentlayer runs as part of the Next.js dev server\n\nFrequently Asked Questions\n--------------------------\n\nWe've heard a lot of questions about Contentlayer. These are the questions we get most often.\n\n[Read more in docs](https://www.contentlayer.dev/docs/other/faq)[Ask a question](https://github.com/contentlayerdev/contentlayer/issues/new)\n\n*   ### What problem is Contentlayer solving?\n    \n    Modern web frameworks don't prescribe a method for parsing content. They provide powerful page routing and rendering processes, but it's up to you to provide it with content. Contentlayer persists the great developer experience provided by modern web frameworks by making it easy to work with content in your web project. [Learn more](https://www.contentlayer.dev/docs/other/faq#what-problem-is-contentlayer-solving).\n    \n*   ### Why is Contentlayer fast?\n    \n    Contentlayer leverages optimizations of build tools to the fullest to make processing source content a breeze. It then caches that content intelligently and builds incrementally. When you update content, Contentlayer will only build what has changed, taking advantage of work already done. [Learn more](https://www.contentlayer.dev/docs/concepts/how-contentlayer-works).\n    \n*   ### Can I use Contentlayer with my existing tools?\n    \n    Contentlayer is built to be framework agnostic. Contentlayer is a content processor at its core, but provides modules for importing content from various sources, and uses plugins to provide tight integration with modern frameworks. [Learn more](https://www.contentlayer.dev/docs/other/faq#can-i-use-contentlayer-with-my-existing-tools).\n    \n\n*   [![Image 62: Lee Robinson](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Lee Robinson Developer Relations at Vercel Having type-safe access to my content has been extremely helpful. Contentlayer provides a nice abstraction between your Markdown files or CMS and your application.](https://twitter.com/leeerob)\n*   [![Image 64: Pedro Duarte](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Pedro Duarte Creator of Radix UI Been using Contentlayer as the mdx processor for the Rainbow docs. Such a pleasant experience üßò‚Äç‚ôÇÔ∏è It transforms the mdx files, validates them AND adds types!](https://twitter.com/peduarte/status/1514688181278580738)\n*   [![Image 66: Houssein Djirdeh](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Houssein Djirdeh Software Engineer at Google Contentlayer looks like a super promising library \\[...\\] to import data from CMS platforms or local files like markdown into your application. Took me less than 5 minutes to cleanly separate and connect MDX files to a Next.js layout.](https://twitter.com/hdjirdeh/status/1483047963316260870)\n*   [![Image 68: Jed Watson](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Jed Watson Co-founder of Thinkmill If you bring content-as-data into your website, whether it's from Markdown files or a hosted CMS, do yourself a favour and check this out. Massive leap forward in speed, type safety, and DX üëèüèª](https://twitter.com/JedWatson/status/1517130123463454721)\n*   [![Image 70: Jo√£o Pedro Schmitz](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Jo√£o Pedro Schmitz Front-End Engineer at GraphCMS We're using Contentlayer on the @GraphCMS documentation, and it's fantastic! It not only loads all the local content, but it also supports MDX. Plus, having type definitions for the content is super helpful.](https://twitter.com/jpedroschmitz/status/1514655711535546375)\n*   [![Image 72: Lee Robinson](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Lee Robinson Developer Relations at Vercel Having type-safe access to my content has been extremely helpful. Contentlayer provides a nice abstraction between your Markdown files or CMS and your application.](https://twitter.com/leeerob)\n*   [![Image 74: Pedro Duarte](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Pedro Duarte Creator of Radix UI Been using Contentlayer as the mdx processor for the Rainbow docs. Such a pleasant experience üßò‚Äç‚ôÇÔ∏è It transforms the mdx files, validates them AND adds types!](https://twitter.com/peduarte/status/1514688181278580738)\n*   [![Image 76: Houssein Djirdeh](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Houssein Djirdeh Software Engineer at Google Contentlayer looks like a super promising library \\[...\\] to import data from CMS platforms or local files like markdown into your application. Took me less than 5 minutes to cleanly separate and connect MDX files to a Next.js layout.](https://twitter.com/hdjirdeh/status/1483047963316260870)\n*   [![Image 78: Jed Watson](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Jed Watson Co-founder of Thinkmill If you bring content-as-data into your website, whether it's from Markdown files or a hosted CMS, do yourself a favour and check this out. Massive leap forward in speed, type safety, and DX üëèüèª](https://twitter.com/JedWatson/status/1517130123463454721)\n*   [![Image 80: Jo√£o Pedro Schmitz](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Jo√£o Pedro Schmitz Front-End Engineer at GraphCMS We're using Contentlayer on the @GraphCMS documentation, and it's fantastic! It not only loads all the local content, but it also supports MDX. Plus, having type definitions for the content is super helpful.](https://twitter.com/jpedroschmitz/status/1514655711535546375)\n*   [![Image 82: Lee Robinson](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Lee Robinson Developer Relations at Vercel Having type-safe access to my content has been extremely helpful. Contentlayer provides a nice abstraction between your Markdown files or CMS and your application.](https://twitter.com/leeerob)\n*   [![Image 84: Pedro Duarte](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Pedro Duarte Creator of Radix UI Been using Contentlayer as the mdx processor for the Rainbow docs. Such a pleasant experience üßò‚Äç‚ôÇÔ∏è It transforms the mdx files, validates them AND adds types!](https://twitter.com/peduarte/status/1514688181278580738)\n*   [![Image 86: Houssein Djirdeh](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Houssein Djirdeh Software Engineer at Google Contentlayer looks like a super promising library \\[...\\] to import data from CMS platforms or local files like markdown into your application. Took me less than 5 minutes to cleanly separate and connect MDX files to a Next.js layout.](https://twitter.com/hdjirdeh/status/1483047963316260870)\n*   [![Image 88: Jed Watson](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Jed Watson Co-founder of Thinkmill If you bring content-as-data into your website, whether it's from Markdown files or a hosted CMS, do yourself a favour and check this out. Massive leap forward in speed, type safety, and DX üëèüèª](https://twitter.com/JedWatson/status/1517130123463454721)\n*   [![Image 90: Jo√£o Pedro Schmitz](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Jo√£o Pedro Schmitz Front-End Engineer at GraphCMS We're using Contentlayer on the @GraphCMS documentation, and it's fantastic! It not only loads all the local content, but it also supports MDX. Plus, having type definitions for the content is super helpful.](https://twitter.com/jpedroschmitz/status/1514655711535546375)\n\n*   [![Image 92: Lee Robinson](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Lee Robinson Developer Relations at Vercel Having type-safe access to my content has been extremely helpful. Contentlayer provides a nice abstraction between your Markdown files or CMS and your application.](https://twitter.com/leeerob)\n*   [![Image 94: Pedro Duarte](blob:https://www.contentlayer.dev/b9a31d3949b1882a09ed2f8508d538f3) Pedro Duarte Creator of Radix UI Been using Contentlayer as the mdx processor for the Rainbow docs. Such a pleasant experience üßò‚Äç‚ôÇÔ∏è It transforms the mdx files, validates them AND adds types!](https://twitter.com/peduarte/status/1514688181278580738)\n\nShow more\n\n[Contentlayer](https://www.contentlayer.dev/)\n\nMIT Licenced - A project by [Stackbit](https://www.stackbit.com/)\n\nMade with üíú by [@schickling](https://twitter.com/schickling) & community\n\n#### Docs\n\n*   [Getting Started](https://www.contentlayer.dev/docs/getting-started)\n*   [Concepts](https://www.contentlayer.dev/docs/concepts)\n*   [Sources](https://www.contentlayer.dev/docs/sources)\n*   [Environments](https://www.contentlayer.dev/docs/environments)\n*   [API Reference](https://www.contentlayer.dev/docs/reference)\n\n#### Examples\n\n*   [Next.js (TypeScript)](https://www.contentlayer.dev/examples/nextjs)\n\n#### Community\n\n*   [Twitter](https://twitter.com/contentlayerdev)\n*   [Discord](https://discord.gg/rytFErsARm)\n*   [GitHub](https://github.com/contentlayerdev/contentlayer)",
    "usage": {
      "tokens": 5154
    }
  }
}