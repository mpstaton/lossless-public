---
export interface Props {
  trademark: string;
}

const { trademark } = Astro.props as Props;
console.log("TrademarkFragment: Received trademark:", trademark);

// Dynamically import the Astro component
let Component = null;
try {
  // Import the component dynamically
  const module = await import(
    `../../assets/visuals-as-components/tooling-trademarks/trademark__${trademark}.astro`
  );
  Component = module.default;
  console.log(
    `TrademarkFragment: Successfully loaded component for ${trademark}`
  );
} catch (error) {
  console.error(`Failed to load component for ${trademark}:`, error);
  // Component will remain null if import fails
}
---

<div class="trademark-wrapper">
  {Component && <Component />}
  {!Component && <div class="fallback">{trademark}</div>}
</div>

<style>
  .trademark-wrapper {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .fallback {
    font-size: 10px;
    color: #999;
    text-align: center;
    word-break: break-all;
    padding: 4px;
  }
</style>
