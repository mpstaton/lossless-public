---
import fs from "node:fs";
import path from "node:path";

// Get all trademark SVGs
const componentsDir = path.join(
  process.cwd(),
  "src/assets/visuals-as-components/trademarks-fixed-height/"
);

const trademarks = fs
  .readdirSync(componentsDir)
  .filter((file) => file.endsWith(".astro"))
  .sort(() => Math.random() - 0.5)
  .map((filename) => {
    const content = fs.readFileSync(path.join(componentsDir, filename), "utf8");
    const svgMatch = content.match(/<svg[^>]*>[\s\S]*?<\/svg>/i);
    return svgMatch ? svgMatch[0] : "";
  })
  .filter(Boolean);
---

<div class="trademark-ribbon">
  <div class="ribbon-track">
    {
      trademarks.map((svg) => (
        <div class="trademark-container" set:html={svg} />
      ))
    }
    {/* Duplicate for seamless loop */}
    {
      trademarks.map((svg) => (
        <div class="trademark-container" set:html={svg} />
      ))
    }
  </div>
</div>

<style>
  .trademark-ribbon {
    width: 100%;
    height: 80px;
    overflow: hidden;
    position: relative;
  }

  .ribbon-track {
    display: flex;
    align-items: center;
    animation: scroll 60s linear infinite;
    width: max-content;
    height: 100%;
    gap: 2rem;
  }

  .trademark-container {
    height: 100%;
    display: flex;
    align-items: center;
  }

  .trademark-container :global(svg) {
    height: 100%;
    width: auto;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .ribbon-track {
      animation: none;
    }
  }
</style>
