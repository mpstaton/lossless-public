---
import TrademarkFragment from "@basics/TrademarkFragment.astro";
import fs from "node:fs";
import path from "node:path";

// Instead of using import.meta.glob for SVGs, get the list of Astro components
// Get all .astro files from the visuals-as-components directory
const componentsDir = path.join(
  process.cwd(),
  "src/assets/visuals-as-components/tooling-trademarks"
);
let logos: string[] = [];

try {
  // Read the directory and filter for .astro files
  const files = fs.readdirSync(componentsDir);
  logos = files
    .filter((file) => file.endsWith(".astro"))
    .map((file) => file.replace(".astro", ""));

  console.log(`Found ${logos.length} Astro components in ${componentsDir}`);
} catch (error: unknown) {
  console.error(
    `Error reading components directory: ${error instanceof Error ? error.message : String(error)}`
  );
  // Provide empty array as fallback
  logos = [];
}

// Shuffle the logos array
function shuffle(array: string[]) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}
const logosShuffled = shuffle(logos);
console.log("LogosShuffled:", logosShuffled);
---

<style>
  .ribbon-container {
    overflow: hidden;
    white-space: nowrap;
    background-color: transparent;
    padding: 1rem 0;
    height: 120px;
  }
  .ribbon {
    display: inline-block;
    animation: scroll-left 20s linear infinite;
  }
  .trademark {
    display: inline-block;
    width: 120px;
    height: 60px;
    margin: 0 1rem;
    vertical-align: middle;
  }
  .trademark img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  .trademark svg {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  @keyframes scroll-left {
    0% {
      transform: translateX(100%);
    }
    100% {
      transform: translateX(-100%);
    }
  }
</style>

<div class="ribbon-container">
  <div class="ribbon">
    {
      logosShuffled.map((logo) => (
        <div class="trademark">
          <TrademarkFragment trademark={logo} />
        </div>
      ))
    }
  </div>
</div>
