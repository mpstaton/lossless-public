{
  "code": 200,
  "status": 20000,
  "data": {
    "links": {
      "": "https://github.com/SkipLabs/skip",
      "New blog posts: where Skip came from and why it matters.": "https://skiplabs.io/blog",
      "Docs": "https://skiplabs.io/docs",
      "About": "https://skiplabs.io/about",
      "Support for writing skip runtime services in skiplang": "https://github.com/SkipLabs/skip/issues/495",
      "Persistence of skip heap": "https://github.com/SkipLabs/skip/issues/492",
      "Python Skip runtime support": "https://github.com/SkipLabs/skip/issues/491",
      "Java Skip runtime support": "https://github.com/SkipLabs/skip/issues/490",
      "Confidential client and user impersonation for auth to other backend services": "https://github.com/SkipLabs/skip/issues/489",
      "Skip heap / provenance debugger": "https://github.com/SkipLabs/skip/issues/487",
      "SQL integration for skip runtime data": "https://github.com/SkipLabs/skip/issues/486",
      "website by": "https://candycode.com/"
    },
    "title": "Skip, the reactive framework",
    "description": "Makes your backend reactive so you can ship better features faster.",
    "url": "https://skiplabs.io/",
    "content": "Skip, the reactive framework\n===============\n\nDocsBlogAboutGet started[](https://discord.gg/4dMEBA46mE)[](https://www.linkedin.com/company/skiplabs/)[](https://github.com/SkipLabs/skip)\n\n[New blog posts: where Skip came from and why it matters.](https://skiplabs.io/blog)\n\n[Docs](https://skiplabs.io/docs)[Blog](https://skiplabs.io/blog)[About](https://skiplabs.io/about)\n\n[](https://github.com/SkipLabs/skip)[](https://www.linkedin.com/company/skiplabs/)[](https://discord.gg/4dMEBA46mE)\n\nGet started\n\nCode declaratively,  \ncompute continuously\n------------------------------------------\n\nSkip lets you build streaming services where you don’t worry about managing side effects\n\nexcessiv|\n\nLearn More\n\nFrom the creators of the Hack and Skip programming languages at Meta\n\n![Image 1](https://skiplabs.io/images/boost-arrow-smooth.svg)\n\n![Image 2](https://skiplabs.io/images/above-fold.svg)\n\nTypeScriptPythonJava\n\nnpm i @skiplabs/skip\n\n![Image 3](https://skiplabs.io/images/below-fold.svg)\n\nIntroduction\n\nHow Skip works\n--------------\n\nClients\n\n\\[frontend or backend\\]\n\n* * *\n\n![Image 4](https://skiplabs.io/graphics/what-is-skip-clients.svg)\n\n![Image 5](https://skiplabs.io/graphics/what-is-skip-clients-shadow.png)\n\nApplication logic\n\n\\[Node.js or Bun\\]\n\n* * *\n\n![Image 6](https://skiplabs.io/graphics/application-logic-box.svg)\n\n![Image 7](https://skiplabs.io/graphics/application-logic-box-shadow.png)\n\nSkip runtime\n\n* * *\n\n![Image 8](https://skiplabs.io/graphics/skip-runtime.svg)\n\n![Image 9](https://skiplabs.io/graphics/skip-runtime-shadow.png)\n\n![Image 10](https://skiplabs.io/images/heap.png)\n\nExternal resource manager\n\nExt.ernal services\n\n* * *\n\n![Image 11](https://skiplabs.io/graphics/backend-box.svg)\n\n![Image 12](https://skiplabs.io/graphics/backend-box-shadow.png)\n\n![Image 13](https://skiplabs.io/graphics/backend-box-icons.svg)\n\n![Image 14](https://skiplabs.io/graphics/backend-box-icons-shadow.png)\n\nSkip is an open source framework first developed at Meta to build & run services where state updates incrementally.\n\nExplore\n\n*   ![Image 15](https://skiplabs.io/graphics/pixel-anchor.svg)\n    \n    Resource manager\n    \n    Data sources are streamed or polled selectively based on client needs.\n    \n*   ![Image 16](https://skiplabs.io/graphics/pixel-anchor.svg)\n    \n    The Skip runtime\n    \n    Manages your objects in a transactional heap guaranteeing immutability and correctness so services can recompute only what has changed.\n    \n*   ![Image 17](https://skiplabs.io/graphics/pixel-anchor.svg)\n    \n    The Skip API\n    \n    Provides a simple declaritive “init time” programming model ensuring programs are effect-free and replayable.\n    \n*   ![Image 18](https://skiplabs.io/graphics/pixel-anchor.svg)\n    \n    Clients\n    \n    Views are continually kept up to date with the latest data and state changes.\n    \n\nExplore\n\nExit\n\n![Image 19](https://skiplabs.io/images/ceremony-01-grid-full.svg)\n\n![Image 20](https://skiplabs.io/images/ceremony-01-grid-waterfall-shadow.png)\n\nReal-time\n\nBFF\n\nCQRS\n\nWhere to use Skip\n\nReal-time features\n------------------\n\nReal-time features\n------------------\n\nSkip lets you build real-time features without the complexity of programming streams or the cost of excessive recomputing.\n\nIt has a declarative point-in-time programming model that removes the challenges of programming streams.\n\nIts incremental runtime only triggers recomputation for the data that has changed.\n\n![Image 21](https://skiplabs.io/graphics/pixel-anchor.svg)\n\nReactivity powers real time\n\nClient app\n\n* * *\n\n![Image 22](https://skiplabs.io/graphics/clients.svg)\n\n![Image 23](https://skiplabs.io/graphics/clients-shadow.png)\n\n![Image 24](https://skiplabs.io/graphics/arrows-two-way.svg)\n\nBackend service\n\n* * *\n\n![Image 25](https://skiplabs.io/graphics/clients.svg)\n\n![Image 26](https://skiplabs.io/graphics/api.svg)\n\n![Image 27](https://skiplabs.io/graphics/api-shadow.png)\n\n![Image 28](https://skiplabs.io/graphics/arrows-two-way.svg)\n\n![Image 29](https://skiplabs.io/graphics/dbms.svg)\n\n![Image 30](https://skiplabs.io/graphics/dbms-shadow.png)\n\nFeatures\n--------\n\nOpen source\n\n100% MIT licensed\n\nReal-time\n\nGenerate simple, reliable real-time API's for web & mobile clients\n\nSimple\n\nNo async complexity\n\nFamiliar\n\nJSON & TypeScript\n\nFlexible\n\nWork with batch data, streaming data or mix of the two\n\nResilient\n\nTransparent state management and failure handling\n\nLightweight\n\nRuns locally with no server to manage\n\nReusable\n\nReuse the services you build with mirroring\n\nHow to use Skip\n\nDeveloper experience\n--------------------\n\n*   Import services, streams, and databases as collections\n    \n    ![Image 31](https://skiplabs.io/temp/connect-card.png)\n    \n*   Write simple TypeScript map functions against collections\n    \n    ![Image 32](https://skiplabs.io/temp/transform-card.png)\n    \n*   Compose more complex logic with reuse\n    \n    ![Image 33](https://skiplabs.io/temp/compose-card.png)\n    \n*   Clients subscribe to real-time updates over http\n    \n    ![Image 34](https://skiplabs.io/temp/subscribe-card.png)\n    \n\nHow to use Skip\n\nDeveloper experience\n--------------------\n\nImport services, streams, and databases as collections\n\nConnect\n\nTransform\n\nCompose\n\nSubscribe\n\nSkip\n\n![Image 35](https://skiplabs.io/temp/connect-card.png)\n\n![Image 36](https://skiplabs.io/temp/connect-card-activated.png)\n\n![Image 37](https://skiplabs.io/images/grid-testimonial-top.svg)\n\nStories from our community\n\n*   ![Image 38](https://skiplabs.io/images/quotes.svg)\n    \n    React has dramatically simplified the way we write front-end code by coming up with a different way to deal with state updates. Skip is finally doing the same for the backend!\n    \n    ![Image 39](https://skiplabs.io/_next/image?url=https%3A%2F%2Fcdn.candycode.com%2Ftemp%2Fchedeau.jpg&w=1024&q=75)\n    \n    Christopher Chedeau (Vjeux)\n    \n    Principal Software Engineer at Meta\n    \n    co-creator of React Native and Prettier\n    \n    Principal Software Engineer at Meta\n    \n    co-creator of React Native and Prettier\n    \n*   ![Image 40](https://skiplabs.io/images/quotes.svg)\n    \n    Skip is like streaming without the streams!\n    \n    ![Image 41](https://skiplabs.io/_next/image?url=https%3A%2F%2Fcdn.candycode.com%2Ftemp%2Fjoulin.jpg&w=1024&q=75)\n    \n    Armand Joulin\n    \n    Research Director at Google\n    \n    lead of Gemma AI models\n    \n    Research Director at Google\n    \n    lead of Gemma AI models\n    \n*   ![Image 42](https://skiplabs.io/images/quotes.svg)\n    \n    Reactive programming done right!\n    \n    ![Image 43](https://skiplabs.io/_next/image?url=https%3A%2F%2Fcdn.candycode.com%2Ftemp%2Fvitek.jpg&w=1024&q=75)\n    \n    Jan Vitek\n    \n    Dir. of Language Theory, Epic Games\n    \n    Prof. of Computer Science, Khoury\n    \n    Director of Language Theory, Epic Games\n    \n    Professor of Computer Science, Khoury\n    \n\n![Image 44](https://skiplabs.io/images/arrow-left.svg)\n\n![Image 45](https://skiplabs.io/images/arrow-right.svg)\n\n![Image 46](https://skiplabs.io/images/grid-testimonial-bottom.svg)\n\nSkip roadmap, What’s next\n\nWhat’s\n\nnext\n\nStar our GitHub repository and follow along for the latest updates\n\n[Explore the Code](https://github.com/SkipLabs/skip)\n\n![Image 47](https://skiplabs.io/images/boost-arrow-right.svg)\n\n![Image 48](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Support for writing skip runtime services in skiplang](https://github.com/SkipLabs/skip/issues/495)\n\n![Image 49](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Persistence of skip heap](https://github.com/SkipLabs/skip/issues/492)\n\n![Image 50](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Python Skip runtime support](https://github.com/SkipLabs/skip/issues/491)\n\n![Image 51](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Java Skip runtime support](https://github.com/SkipLabs/skip/issues/490)\n\n![Image 52](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Confidential client and user impersonation for auth to other backend services](https://github.com/SkipLabs/skip/issues/489)\n\n![Image 53](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Skip heap / provenance debugger](https://github.com/SkipLabs/skip/issues/487)\n\n![Image 54](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[SQL integration for skip runtime data](https://github.com/SkipLabs/skip/issues/486)\n\n![Image 55](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Support for writing skip runtime services in skiplang](https://github.com/SkipLabs/skip/issues/495)\n\n![Image 56](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Persistence of skip heap](https://github.com/SkipLabs/skip/issues/492)\n\n![Image 57](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Python Skip runtime support](https://github.com/SkipLabs/skip/issues/491)\n\n![Image 58](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Java Skip runtime support](https://github.com/SkipLabs/skip/issues/490)\n\n![Image 59](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Confidential client and user impersonation for auth to other backend services](https://github.com/SkipLabs/skip/issues/489)\n\n![Image 60](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[Skip heap / provenance debugger](https://github.com/SkipLabs/skip/issues/487)\n\n![Image 61](https://skiplabs.io/graphics/pixels-tab-ornament.svg)[SQL integration for skip runtime data](https://github.com/SkipLabs/skip/issues/486)\n\nGet Started\n-----------\n\nTypeScriptPythonJava\n\nnpm i @skiplabs/skip\n\nSign up to get updates on the Skip Framework, Skiplabs, new examples, and tips on reactivity\n\nSubmit\n\n![Image 62](https://skiplabs.io/images/floppy-disk-texture.png)![Image 63](https://skiplabs.io/images/floppy-disk.svg)![Image 64](https://skiplabs.io/images/floppy-disk-shadow.svg)\n\nCopyright © 2025 Skiplabs Inc.  \nAll rights reserved.\n\n[Read the Docs](https://skiplabs.io/docs)[Join the Community](https://discord.gg/4dMEBA46mE)\n\nAsk an Engineer\n\n[website by![Image 65: candycode alternative React design development agency San Diego branding websites](https://storage.googleapis.com/candycode/candycode.svg)](https://candycode.com/)\n\n[website by![Image 66: candycode alternative React design development agency San Diego branding websites](https://storage.googleapis.com/candycode/candycode.svg)](https://candycode.com/)",
    "usage": {
      "tokens": 2684
    }
  }
}